This is a mirror of http://www.vim.org/scripts/script.php?script_id=4922

DESCRIPTION
This plugin adds the following features to the default Vim mappings for
:isearch, :ilist and :ijump:
- ]I et al. not only list the occurrences, but ask for the occurrence number
  to jump to.
- ]I et al. also work in visual mode, searching for the selection instead of
  the keyword under cursor.
- New ]n ]N ]<C-N> <C-W>n <C-W><C-N> mappings that operate on the
  last search pattern.
- New ]/ <C-W>/ mappings that query and then operate on a pattern.

SOURCE
Based on the Vim Tip "Search visually":
    http://vim.wikia.com/wiki/Search_visually

USAGE
List occurrences of word under cursor / visual selection:
With any [count], also includes 'comment'ed lines.
[count][I               List all occurrences in the file. (Like :ilist)
[count]]I               List occurrences from the cursor position to end of
                        file.
[count][CTRL-I          Jump to the [count]'th occurrence in the file. (Like
                        :ijump)
[count]]CTRL-I          Jump to the [count]'th occurrence starting from the
                        cursor position.

List occurrences of last search pattern quote/:
With any [count], also includes 'comment'ed lines.
[count][n               List [count]'th occurrence in the file. (Like
                        :isearch)
[count]]n               List [count]'th occurrence from the cursor position.
[count][N               List all occurrences in the file. (Like :ilist)
[count]]N               List occurrences from the cursor position to end of
                        file.
[count][CTRL-N          Jump to the [count]'th occurrence in the file. (Like
                        :ijump)
[count]]CTRL-N          Jump to the [count]'th occurrence starting from the
                        cursor position.

List occurrences of queried pattern:
With any [count], also includes 'comment'ed lines.
[count][/               Without [count]: Query, then list all occurrences in
                        the file (like :ilist).
                        With [count]: Query, then jump to [count]'th
                        occurrence; if it doesn't exist, list all occurrences.
[count]]/               Without [count]: Query, then list occurrences from the
                        cursor position to end of file.
                        With [count]: Query, then jump to [count]'th
                        occurrence from the cursor position; if it doesn't
                        exist, list occurrences from the cursor position to
                        end of file.
                        These eclipse [/ and ]/ motions, but you can still use
                        [* and ]*.
[count]CTRL-W_/         Query, then jump to the [count]'th occurrence in a
                        split window.

[count][?               Without [count]: List all occurrences of the
                        previously queried pattern in the file (like
                        :ilist).
                        With [count]: Jump to [count]'th previously queried
                        occurrence; if it doesn't exist, list all occurrences.
[count]]?               Without [count]: List occurrences of the previously
                        queried pattern from the cursor position to end of
                        file.
                        With [count]: Jump to [count]'th previously queried
                        occurrence from the cursor position; if it doesn't
                        exist, list occurrences from the cursor position to
                        end of file.
[count]CTRL-W_?         Jump to the [count]'th previously queried occurrence
                        in a split window.

NOTES
- The [ and <C-W> mappings start at the beginning of the file, the ] mappings
  at the line after the cursor. Both are directed forward, so it's easy to
  jump to the next match, but to go to a previous match, you have to find out
  about the match number and use that.
- Without a [count], commented lines are ignored. If you want to show the list
  that includes commented lines, use a high count (e.g. 999) that is unlikely
  to produce a direct match.
- x just echoes the occurrence, X prints a list of the occurrences and asks
  for the occurrence number to jump to, <C-X> directly jumps to the
  occurrence, <C-W>x and <C-W><C-X> split the window and jump to the
  occurrence.
- i I <Tab> <C-W>i <C-W><Tab> for keyword under cursor.
- d D <C-D> <C-W>d <C-W><C-D> for macro definition under cursor.
- n N <C-N> <C-W>n <C-W><C-N> for last search pattern.
- / <C-W>/                    for queried pattern.

USE CASES
- List all occurrences excluding / including comments:
  [X / 999[X
- Move through all matches excluding / including comments:
  [CTRL-X, ]CTRL-X, ]CTRL-X, ... / 1[CTRL-X, 1]CTRL-X, 1]CTRL-X, ...
- Move through every n'th match excluding / including comments:
  [CTRL-X, ]Xn, ]Xn, ... / 1[CTRL-X, n]CTRL-X, n]CTRL-X, ...
